{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/graph/": {
      "post": {
        "summary": "Create Graph",
        "description": "Ручка для создания графа, принимает граф в виде списка вершин и списка ребер.",
        "operationId": "create_graph_api_graph__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to add graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph/{graph_id}/": {
      "get": {
        "summary": "Read Graph",
        "description": "Ручка для чтения графа в виде списка вершин и списка ребер.",
        "operationId": "read_graph_api_graph__graph_id___get",
        "parameters": [
          {
            "name": "graph_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Graph Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphReadResponse"
                }
              }
            }
          },
          "404": {
            "description": "Graph entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph/{graph_id}/adjacency_list": {
      "get": {
        "summary": "Get Adjacency List",
        "description": "Ручка для чтения графа в виде списка смежности.\nСписок смежности представлен в виде пар ключ - значение, где\n- ключ - имя вершины графа,\n- значение - список имен всех смежных вершин (всех потомков ключа).",
        "operationId": "get_adjacency_list_api_graph__graph_id__adjacency_list_get",
        "parameters": [
          {
            "name": "graph_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Graph Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjacencyListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Graph entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph/{graph_id}/reverse_adjacency_list": {
      "get": {
        "summary": "Get Reverse Adjacency List",
        "description": "Ручка для чтения транспонированного графа в виде списка смежности.\nСписок смежности представлен в виде пар ключ - значение, где\n- ключ - имя вершины графа,\n- значение - список имен всех смежных вершин (всех предков ключа в исходном графе).",
        "operationId": "get_reverse_adjacency_list_api_graph__graph_id__reverse_adjacency_list_get",
        "parameters": [
          {
            "name": "graph_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Graph Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjacencyListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Graph entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph/{graph_id}/node/{node_name}": {
      "delete": {
        "summary": "Delete Node",
        "description": "Ручка для удаления вершины из графа по ее имени.",
        "operationId": "delete_node_api_graph__graph_id__node__node_name__delete",
        "parameters": [
          {
            "name": "graph_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Graph Id"
            }
          },
          {
            "name": "node_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Name"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Graph entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdjacencyListResponse": {
        "properties": {
          "adjacency_list": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Adjacency List"
          }
        },
        "type": "object",
        "required": [
          "adjacency_list"
        ],
        "title": "AdjacencyListResponse"
      },
      "Edge": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source"
          },
          "target": {
            "type": "string",
            "title": "Target"
          }
        },
        "type": "object",
        "required": [
          "source",
          "target"
        ],
        "title": "Edge"
      },
      "ErrorResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ErrorResponse"
      },
      "GraphCreate": {
        "properties": {
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/Node"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/Edge"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "nodes",
          "edges"
        ],
        "title": "GraphCreate"
      },
      "GraphCreateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "GraphCreateResponse"
      },
      "GraphReadResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/Node"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/Edge"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nodes",
          "edges"
        ],
        "title": "GraphReadResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Node": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Node"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}